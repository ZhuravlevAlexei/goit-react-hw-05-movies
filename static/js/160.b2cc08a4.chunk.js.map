{"version":3,"file":"static/js/160.b2cc08a4.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://react-homework-template/./src/components/Search/Search.module.css?06df","components/Search/Search.jsx","pages/Movies.jsx","sevices/library.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__wiIYs\",\"buttonWrap\":\"Button_buttonWrap__ZRtPo\"};","import PropTypes from 'prop-types';\nimport css from './Button.module.css';\n\nconst Button = ({ btnName, onClick }) => {\n  return (\n    <div className={css.buttonWrap}>\n      <button className={css.button} onClick={onClick} type=\"button\">\n        {btnName}\n      </button>\n    </div>\n  );\n};\n\nexport default Button;\n\nButton.propTypes = {\n  btnName: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonWrap\":\"MovieList_buttonWrap__bPcX1\"};","import { Link } from 'react-router-dom';\nimport Button from '../Button/Button';\nimport PropTypes from 'prop-types';\nimport css from './MovieList.module.css';\n\nconst MovieList = ({\n  location,\n  movieList,\n  paginationPage,\n  totalPages,\n  onLoadNextPage,\n  onLoadPreviousPage,\n  onToStartPage,\n}) => {\n  return (\n    <>\n      <ul>\n        {movieList.map(({ id, title }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={location}>\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n      <div className={css.buttonWrap}>\n        {movieList.length !== 0 && paginationPage > 1 && (\n          <>\n            <Button btnName={'Start page'} onClick={onToStartPage} />\n            <Button btnName={'Previous page'} onClick={onLoadPreviousPage} />\n          </>\n        )}\n        {movieList.length !== 0 && paginationPage < totalPages && (\n          <Button btnName={'Next page'} onClick={onLoadNextPage} />\n        )}\n      </div>\n    </>\n  );\n};\n\nMovieList.propTypes = {\n  location: PropTypes.object.isRequired,\n  movieList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n  paginationPage: PropTypes.number.isRequired,\n  totalPages: PropTypes.number.isRequired,\n  onLoadNextPage: PropTypes.func.isRequired,\n  onLoadPreviousPage: PropTypes.func.isRequired,\n  onToStartPage: PropTypes.func.isRequired,\n};\n\nexport default MovieList;\n\n// an example for the future\n\n// there is a react-router-prop-types package\n// you can install and use.It exports a location PropType\n// declaration with the pathname prop already required.\n\n// export const location = PropTypes.shape({\n//   hash: PropTypes.string.isRequired,\n//   key: PropTypes.string, // only in createBrowserHistory and createMemoryHistory\n//   pathname: PropTypes.string.isRequired,\n//   search: PropTypes.string.isRequired,\n//   state: PropTypes.oneOfType([\n//     PropTypes.array,\n//     PropTypes.bool,\n//     PropTypes.number,\n//     PropTypes.object,\n//     PropTypes.string,\n//   ]), // only in createBrowserHistory and createMemoryHistory\n// });\n\n// import { location } from 'react-router-prop-types';\n\n// Dashboard.propTypes = {\n//   // ... the other prop types\n//   location: location.isRequired,\n// };\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"Search_searchForm__0FeD+\"};","import PropTypes from 'prop-types';\nimport css from './Search.module.css';\n\nconst Search = ({ handleSubmit, handleSearchInputChange, searchText }) => {\n  return (\n    <form onSubmit={handleSubmit} className={css.searchForm}>\n      <label>\n        <input\n          className={css.input}\n          value={searchText}\n          name=\"search\"\n          type=\"text\"\n          onChange={handleSearchInputChange}\n          autoComplete=\"off\"\n        />\n      </label>\n      <button className={css.searchBtn} type=\"submit\">\n        Search\n      </button>\n    </form>\n  );\n};\n\nexport default Search;\n\nSearch.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  handleSearchInputChange: PropTypes.func.isRequired,\n  searchText: PropTypes.string.isRequired,\n};\n","import { useEffect, useState, useRef } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { getDataByAxios } from 'sevices/library';\nimport Search from 'components/Search/Search';\nimport MovieList from 'components/MovieList/MovieList';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  // !!don't erase this line!! console.log('searchParams :>> ', Object.fromEntries([...searchParams]));\n  const [movieList, setMovieList] = useState([]);\n  const totalPages = useRef(0);\n\n  let paginationPage = Number(searchParams.get('page'));\n  if (paginationPage === 0) {\n    paginationPage = 1;\n  }\n  let searchText = searchParams.get('search') ?? '';\n  let title = '';\n\n  useEffect(() => {\n    getDataByAxios(`/search/movie`, paginationPage, searchText).then(resp => {\n      if (resp.status !== 200) {\n        throw new Error(resp.statusText);\n      } else {\n        // setTotalPages(resp.data.total_pages);\n        totalPages.current = resp.data.total_pages;\n        setMovieList(resp.data.results);\n      }\n    });\n  }, [paginationPage, searchText]);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    paginationPage = 1;\n    setSearchParams({ search: searchText.trim(), page: 1 });\n  };\n\n  const handleSearchInputChange = ({ target: { value } }) => {\n    setSearchParams({ search: value, page: paginationPage });\n  };\n\n  const onLoadNextPage = () => {\n    paginationPage = paginationPage + 1;\n    setSearchParams({ search: searchText, page: paginationPage });\n  };\n\n  const onLoadPreviousPage = () => {\n    paginationPage = paginationPage - 1;\n    setSearchParams({ search: searchText, page: paginationPage });\n  };\n\n  const onToStartPage = () => {\n    paginationPage = 1;\n    setSearchParams({ search: searchText, page: 1 });\n  };\n\n  if (movieList.length === 0) {\n    title = 'No matches';\n  } else {\n    title = `Search \"${searchText}\" (Page ${paginationPage} of ${totalPages.current})`;\n  }\n\n  return (\n    <div>\n      <Search\n        handleSubmit={handleSubmit}\n        handleSearchInputChange={handleSearchInputChange}\n        searchText={searchText}\n      />\n      {searchText && <h3>{title}</h3>}\n      {movieList.length !== 0 && (\n        <MovieList\n          location={location}\n          movieList={movieList}\n          paginationPage={paginationPage}\n          totalPages={totalPages.current}\n          onLoadNextPage={onLoadNextPage}\n          onLoadPreviousPage={onLoadPreviousPage}\n          onToStartPage={onToStartPage}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nimport { toast } from 'react-hot-toast';\n\nexport async function getDataByAxios(\n  ENDPOINT,\n  paginationPage = 1,\n  searchText = ''\n) {\n  try {\n    const BASE_URL = `https://api.themoviedb.org/3`;\n    const MY_THEMOVIEDB_API_KEY = '6dfafd08c001fd3262dc3fe23504fa05';\n    let URL = BASE_URL + ENDPOINT + `?api_key=${MY_THEMOVIEDB_API_KEY}`;\n\n    if (searchText) {\n      URL = URL + `&query=${searchText.trim()}`;\n    }\n    if (paginationPage) {\n      URL = URL + `&page=${paginationPage}`;\n    }\n    const resp = await axios.get(URL);\n    return resp;\n  } catch (error) {\n    toast.error(error.message);\n  }\n}\n\n// my themoviedb API keys\n//API Key (v3 auth)  6dfafd08c001fd3262dc3fe23504fa05\n\n//Example API Request  https://api.themoviedb.org/3/movie/550?api_key=6dfafd08c001fd3262dc3fe23504fa05\n\n//API Read Access Token (v4 auth)\n// eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2ZGZhZmQwOGMwMDFmZDMyNjJkYzNmZTIzNTA0ZmEwNSIsInN1YiI6IjY0M2E0OTk1MzEyMzQ1MDRjNGQ4MmNhNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.gg9n2ywUncYKufSDUyoeH5lMDCKTXBfCUwhmMMZYBBk\n"],"names":["btnName","onClick","className","css","type","location","movieList","paginationPage","totalPages","onLoadNextPage","onLoadPreviousPage","onToStartPage","map","id","title","to","state","length","handleSubmit","handleSearchInputChange","searchText","onSubmit","value","name","onChange","autoComplete","useLocation","useSearchParams","searchParams","setSearchParams","useState","setMovieList","useRef","Number","get","useEffect","getDataByAxios","then","resp","status","Error","statusText","current","data","total_pages","results","evt","preventDefault","search","trim","page","target","MovieList","ENDPOINT","URL","axios","toast","message"],"sourceRoot":""}